AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template is used to create a repository which will be used as
  source of a codepipeline
Parameters:
  RepoName:
    Type: String
    Description: Name of the codecommit repository
Resources:
  CodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepoName
  ECRRepo:
    Type: AWS::ECR::Repository
    Properties:
      ImageTagMutability: IMMUTABLE
      RepositoryName: !Ref RepoName
  ArtifactsHub:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
      - '-'
      - - "infracode"
        - !Ref AWS::Region
        - !Ref AWS::AccountId
  RoleForCodeBuild:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  PolicyForCodeBuild:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
              - "codebuild:CreateReportGroup"
              - "codebuild:CreateReport"
              - "codebuild:UpdateReport"
              - "codebuild:BatchPutTestCases"
              - "codebuild:BatchPutCodeCoverages"
            Resource: "*"
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:GetBucketAcl"
              - "s3:GetBucketLocation"
            Resource:
              - !GetAtt ArtifactsHub.Arn
              - !Join ["/",[!GetAtt ArtifactsHub.Arn,"*"]]
          - Effect: Allow
            Action:
              - "codecommit:GitPull"
            Resource: !GetAtt CodeRepo.Arn
      PolicyName: !Join
        - '-'
        - - "codebuild"
          - !Ref AWS::StackName
          - !Ref AWS::Region
      Roles:
        - !Ref RoleForCodeBuild
  RoleForCodepipeline:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  PolicyForCodepipeline:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
              - "iam:PassRole"
            Resource: "*"
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - "cloudformation.amazonaws.com"
                  - "elasticbeanstalk.amazonaws.com"
                  - "ec2.amazonaws.com"
                  - "ecs-tasks.amazonaws.com"
          - Effect: Allow
            Resource: "*"
            Action:
              - "codecommit:CancelUploadArchive"
              - "codecommit:GetRepository"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetUploadArchiveStatus"
              - "codecommit:UploadArchive"
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetApplication"
              - "codedeploy:GetApplicationRevision"
              - "codedeploy:GetDeployment"
              - "codedeploy:GetDeploymentConfig"
              - "codedeploy:RegisterApplicationRevision"
              - "codestar-connections:UseConnection"
              - "elasticbeanstalk:*"
              - "ec2:*"
              - "elasticloadbalancing:*"
              - "autoscaling:*"
              - "cloudwatch:*"
              - "s3:*"
              - "sns:*"
              - "rds:*"
              - "sqs:*"
              - "ecs:*"
              - "lambda:InvokeFunction"
              - "lambda:ListFunctions"
              - "opsworks:CreateDeployment"
              - "opsworks:DescribeApps"
              - "opsworks:DescribeCommands"
              - "opsworks:DescribeDeployments"
              - "opsworks:DescribeInstances"
              - "opsworks:DescribeStacks"
              - "opsworks:UpdateApp"
              - "opsworks:UpdateStack"
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeStacks"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:SetStackPolicy"
              - "cloudformation:ValidateTemplate"
              - "codebuild:BatchGetBuilds"
              - "codebuild:StartBuild"
              - "devicefarm:ListProjects"
              - "devicefarm:ListDevicePools"
              - "devicefarm:GetRun"
              - "devicefarm:GetUpload"
              - "devicefarm:CreateUpload"
              - "devicefarm:ScheduleRun"
              - "servicecatalog:ListProvisioningArtifacts"
              - "servicecatalog:CreateProvisioningArtifact"
              - "servicecatalog:DescribeProvisioningArtifact"
              - "servicecatalog:DeleteProvisioningArtifact"
              - "servicecatalog:UpdateProduct"
              - "ecr:DescribeImages"
              - "states:DescribeExecution"
              - "states:DescribeStateMachine"
              - "states:StartExecution"
              - "appconfig:StartDeployment"
              - "appconfig:StopDeployment"
              - "appconfig:GetDeployment"
      PolicyName: !Join
        - '-'
        - - "codepipeline"
          - !Ref AWS::StackName
          - !Ref AWS::Region
      Roles:
        - !Ref RoleForCodepipeline
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: RepoURL
            Type: PLAINTEXT
            Value: !Ref ECRRepo
          - Name: Region
            Type: PLAINTEXT
            Value: !Ref AWS::Region
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt RoleForCodeBuild.Arn
      Source:
        Type: CODEPIPELINE
  PipeLine:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join ["-",[!Ref RepoName,!Ref AWS::StackName]]
      ArtifactStores:
        - ArtifactStore:
            Location: !Ref ArtifactsHub
            Type: S3
          Region: !Ref AWS::Region
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt RoleForCodepipeline.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: PullCode
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                RepositoryName: !GetAtt CodeRepo.Name
                BranchName: master
                PollForSourceChanges: true
                OutputArtifactFormat: CODEBUILD_CLONE_REF
        - Name: Build
          Actions:
            - Name: BuildImage
              ActionTypeId:
                Category: Build 
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                ProjectName: !Ref BuildProject
